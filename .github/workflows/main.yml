# Nome do Workflow
name: Deploy Terraform Infrastructure via OIDC

# Gatilho
on:
  push:
    branches:
      - main
  # workflow_dispatch:

# Permissões necessárias para o Job obter o token OIDC e ler o conteúdo
permissions:
  id-token: write # Necessário para solicitar o token OIDC do GitHub
  contents: read  # Necessário para fazer o checkout do código

jobs:
  terraform:
    name: 'Terraform Apply using OIDC'
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura as credenciais AWS usando OIDC
      #    Substitua 'arn:aws:iam::SEU_ACCOUNT_ID:role/SEU_GITHUB_ACTIONS_ROLE_NAME'
      #    pelo ARN da Role que você criou na AWS para este workflow.
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_OIDC_ROLE_ARN }}
          aws-region: sa-east-1 # Sua região AWS
          role-session-name: GitHubActions-${{ github.run_id }}

      # 3. Setup do Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # 4. Terraform Init
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      # 5. Terraform Validate
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      # 6. Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        working-directory: ./terraform

      # 7. Terraform Apply (com auto-approve)
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform